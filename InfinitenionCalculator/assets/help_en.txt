+:add(binary)
Usage: a b +

-:subtract(binary)
Usage: a b -

*:multiply(binary)
Usage: a b *

/:division（binary）
Usage:　a b /

^:power（binary）
Usage: a n ^（n is a positive integer）

E:En are nth imaginary units
Usage: En（n is a positive integer）

X:X or Xn are variables
Usage:X or Xn（n is a positive integer）

<=:substitution（binary）
Usage:Xn a <=（Xn is a variable）

negate:negation（unary）
Usage:a negate

inv:inverse（unary）
Usage: a inv

conj:conjugate（unary）
Usage: a conj

norm:norm(unary)
sum of square of all components of hypercomplex numbers
it is square of usual euclidian norm
so usual distance is square root of this.
Usage:a norm

commu:a*b-b*a
If a and b are commutative it is 0（binary)
Usage:a b commu

assoc:(a*b)*c-a*(b*c)
if a, b and c are associative it is 0（ternary）
Usage:a b c assoc

normed:|a*b|-|a|*|b|
if a and b commute multiply and norm it is 0(binary)
Usage:a b normed

□:open box

C:clear input text box

BS:backspace

↑:trace back command history

↓:back to the future

⇒:next keypad

⇐:previous keypad